/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-04-06 05:57:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.dto.LoginDto;
import com.dto.LoginDto;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1614137368486L));
    _jspx_dependants.put("/Form/header.jsp", Long.valueOf(1617688202136L));
    _jspx_dependants.put("jar:file:/C:/Users/kas78/Desktop/khkhkh/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Semi/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.dto.LoginDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>메인페이지</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/indexResources/style.css\" />\r\n");
      out.write("<script src=\"resources/indexResources/script.js\" charset=\"utf-8\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
 


LoginDto dto =(LoginDto)session.getAttribute("dto"); //컨트롤러에서 dto 받아와서 형변환 
System.out.println("session 담겼을까요?"+dto);


      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write(" \r\n");
      out.write("\t\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"resources/js/header.js\"></script>\r\n");
      out.write("\t<link\r\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css\"\r\n");
      out.write("\trel=\"stylesheet\"\r\n");
      out.write("\tintegrity=\"sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl\"\r\n");
      out.write("\tcrossorigin=\"anonymous\" />\r\n");
      out.write("\t<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.0/font/bootstrap-icons.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/header.css\">\r\n");
      out.write("\t\r\n");
      out.write("\t<!--  <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"resouces/bootstrap/js/bootstrap.js\"></script>-->\r\n");
      out.write("</head>\r\n");
      out.write("  <body>\r\n");
      out.write("  ");

  	LoginDto dto1 = (LoginDto)session.getAttribute("dto");
  
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      <header>\r\n");
      out.write("\t      <!-- 로고 부분 -->\r\n");
      out.write("\t      <a href=\"move.do?move=home\" class=\"brand\">\r\n");
      out.write("\t      \t<img src=\"resources/img/logo.png\" alt=\"\" width=\"200px\">\r\n");
      out.write("\t      </a>\r\n");
      out.write("\t      <!-- ? -->\r\n");
      out.write("\t      <div class=\"menu-btn\"></div>\r\n");
      out.write("\t      \r\n");
      out.write("\t      <!-- 항복 부분 -->\r\n");
      out.write("\t      <div class=\"navigation\">\r\n");
      out.write("\t      \t<a href=\"move.do?move=petboard\">펫보드</a>\r\n");
      out.write("\t        <a href=\"move.do?move=noticeboard\">공지사항</a>\r\n");
      out.write("\t        <a href=\"move.do?move=matchPet\">얼굴인식</a>\r\n");
      out.write("\t        <a href=\"move.do?move=donation\">기부페이지</a>\r\n");
      out.write("\t        <a href=\"move.do?move=map\">지도페이지이동</a>\r\n");
      out.write("\t        <a href=\"move.do?move=doctor\">펫닥터페이지</a>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t\t\t");

			if (dto1 != null) {
				if (dto1.getMem_image() == null) {
			
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"action1\">\r\n");
      out.write("\t\t\t\t\t<div class=\"profile\" onclick=\"menuToggle()\">\r\n");
      out.write("\t\t\t\t\t\t<img src=\"resources/img/profile.jpg\" alt=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<h7>\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(dto1.getMem_name());
      out.write(" 님<br>\r\n");
      out.write("\t\t\t\t\t\t\t<span>환영합니다.</span>\r\n");
      out.write("\t\t\t\t\t\t</h7>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"list-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"resources/img/edit.png\" alt=\"\"><a href=\"login.do?command=updatform&mem_no=");
      out.print(dto1.getMem_no());
      out.write("\">Edit profile</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"resources/img/log-out.png\" alt=\"\"><a href=\"login.do?command=logout\">Logout</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t        \t\t\t\t\t    \t\t\r\n");
      out.write("\t\t\t");

			    }else{
			
      out.write("\r\n");
      out.write("\t\t\t\t<div class=\"action1\">\r\n");
      out.write("\t\t\t\t\t<div class=\"profile\" onclick=\"menuToggle()\">\r\n");
      out.write("\t\t\t\t\t\t<img src=\"./upload/");
      out.print(dto1.getMem_image() );
      out.write("\" alt=\"\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div class=\"menu\">\r\n");
      out.write("\t\t\t\t\t\t<h7>\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.print(dto1.getMem_name());
      out.write(" 님<br>\r\n");
      out.write("\t\t\t\t\t\t\t<span>환영합니다.</span>\r\n");
      out.write("\t\t\t\t\t\t</h7>\r\n");
      out.write("\t\t\t\t\t\t<ul class=\"list-group\">\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"resources/img/edit.png\" alt=\"\"><a href=\"login.do?command=updatform&mem_no=");
      out.print(dto1.getMem_no());
      out.write("\">Edit profile</a></li>\r\n");
      out.write("\t\t\t\t\t\t\t<li><img src=\"resources/img/log-out.png\" alt=\"\"><a href=\"login.do?command=logout\">Logout</a></li>\r\n");
      out.write("\t\t\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t");

				}			
       		} else {
	      	
      out.write("\r\n");
      out.write("\t       \t<a href=\"move.do?move=loginpage\">\r\n");
      out.write("\t       \t\t<button>로그인</button> \r\n");
      out.write("\t       \t</a>\r\n");
      out.write("\t       \t");

       		}
	       	
      out.write("\r\n");
      out.write("\t       \t</div> \r\n");
      out.write("    </header>\r\n");
      out.write("    <div class=\"upsite\"></div>\r\n");
      out.write("  </body>\r\n");
      out.write("  <script type=\"text/javascript\">\r\n");
      out.write("\t  function menuToggle(){\r\n");
      out.write("\t      const toggleMenu = document.querySelector('.menu');\r\n");
      out.write("\t      toggleMenu.classList.toggle('active');\r\n");
      out.write("\t  }\r\n");
      out.write("  </script>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 메인부분 시작 -->\r\n");
      out.write("\t<section class=\"main\">\r\n");
      out.write("\t\t<div class=\"slide slide1\"></div>\r\n");
      out.write("        <div class=\"slide slide2\" id=\"slide\"></div>\r\n");
      out.write("        \r\n");
      out.write("      \t<div class=\"content\">\r\n");
      out.write("        \t<h2>함께해요<br /><span>맛있는 밥 후원하기</span></h2>\r\n");
      out.write("        <div class=\"animated-text\">\r\n");
      out.write("          <h3>랜선보호자가 되고싶다면?</h3>\r\n");
      out.write("          <h3>굶주림에 지친아이들을 돕고싶다면?</h3>\r\n");
      out.write("          <h3>유기견 보호소에 힘이되고 싶다면?</h3>\r\n");
      out.write("        </div>\r\n");
      out.write("        <a href=\"move.do?move=donation\" class=\"btn1\">후원하기</a>\r\n");
      out.write("       <!--  <div class=\"media-icons\">\r\n");
      out.write("          <a href=\"#\"><i class=\"fab fa-facebook\"></i></a>\r\n");
      out.write("          <a href=\"#\"><i class=\"fab fa-instagram\"></i></a>\r\n");
      out.write("          <a href=\"#\"><i class=\"fab fa-twitter\"></i></a>\r\n");
      out.write("        </div> -->\r\n");
      out.write("      </div>\r\n");
      out.write("    </section>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("        var slide = document.getElementById('slide');\r\n");
      out.write("        window.onmousemove = function(e){\r\n");
      out.write("            var x = e.clientX;\r\n");
      out.write("            slide.style.left = x+'px';\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("    <!-- 메인부분 종료 -->\r\n");
      out.write("    \r\n");
      out.write("    <!-- about 부분 시작 -->\r\n");
      out.write("    <section class=\"about\" id=\"about\">\r\n");
      out.write("      <div class=\"title\">\r\n");
      out.write("        <h2 class=\"section-title\">About Us</h2>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"content\">\r\n");
      out.write("        <div class=\"column col-left\">\r\n");
      out.write("          <div class=\"img-card\">\r\n");
      out.write("            <img src=\"resources/indexResources/cat.jpg\" alt=\"\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"column col-right\">\r\n");
      out.write("          <h2 class=\"content-title\">ANIMALNATION</h2>\r\n");
      out.write("          <p class=\"paragraph-text\" style=\"font-size: 14pt;\">\r\n");
      out.write("          오늘날 전세계적으로 700억여 마리의 동물들이 인간에 의해 태어나고 죽음에 이르고 있습니다. <br>\r\n");
      out.write("          그리고 국내에서는 매년 십만 마리 이상 하루에 약 200마리의 반려동물들이 길거리에 버려지고 있습니다. <br>\r\n");
      out.write("          이 중 새 보호자를 찾거나 원래 집으로 돌아가는 경우도 있지만 대부분은 자연사하거나 안락사 됩니다. <br>\r\n");
      out.write("          인간에 의해 상처받고 고통받는 것에 책임을 느끼고 작은 보탬이 되고자 애니멀네이션을 설립하였습니다. <br>\r\n");
      out.write("\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t   </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\t<!-- about 부분 종료 -->\r\n");
      out.write("\t<!-- about 부분 시작 -->\r\n");
      out.write("    <section class=\"about1\" id=\"about\">\r\n");
      out.write("      <div class=\"title1\">\r\n");
      out.write("        <h2 class=\"section-title1\">About Us</h2>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"content\">        \r\n");
      out.write("        <div class=\"column col-right\">\r\n");
      out.write("          <h2 class=\"content-title1\">ANIMALNATION</h2>\r\n");
      out.write("          <p class=\"paragraph-text1\" style=\"font-size: 14pt;\">\r\n");
      out.write("          애니멀네이션은 흩어져있는 보호소의 정보를 모아 한눈에 보여주어 중간다리의 역할을 하는 플랫폼입니다.<br> \r\n");
      out.write("\t\t  저희는 잊혀져 가는 유기동물들의 입양을 도와주고, 운영비용이 모자란 보호소에 후원금을 전달 합니다. <br>\r\n");
      out.write("\t\t  여러분들의 소중한 마음이 모여 올바른 반려동물 문화가 자리잡게 될 것입니다.<br>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t   </div>\r\n");
      out.write("\t   <div class=\"column col-left\">\r\n");
      out.write("          <div class=\"img-card\">\r\n");
      out.write("            <img src=\"resources/indexResources/cat.jpg\" alt=\"\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\t<!-- about 부분 종료 -->\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- slider 부분 -->\r\n");
      out.write("\t<section class=\"sliderBody\">\r\n");
      out.write("\t\t<div class=\"img-slider\">\r\n");
      out.write("\t        <div class=\"slide3 active\">\r\n");
      out.write("\t            <img src=\"resources/indexResources/cat.jpg\" alt=\"\" class=\"mainImage\">\r\n");
      out.write("\t            <div class=\"info\">\r\n");
      out.write("\t                <h2>Slide 01</h2>\r\n");
      out.write("\t                <p>In this video, You will learn how to design a Responsive Image Slider(Slideshow / Carousel) with Manual Navigation Buttons and Auto-Play Navigation functionalities only using pure javascript. In this Image Slider, you can add more images you want without changing any CSS styles because </p>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t        <div class=\"slide3\">\r\n");
      out.write("\t            <img src=\"resources/indexResources/cat.jpg\" alt=\"\" class=\"mainImage\">\r\n");
      out.write("\t            <div class=\"info\">\r\n");
      out.write("\t                <h2>Slide 02</h2>\r\n");
      out.write("\t                <p>In this video, You will learn how to design a Responsive Image Slider(Slideshow / Carousel) with Manual Navigation Buttons and Auto-Play Navigation functionalities only using pure javascript. In this Image Slider, you can add more images you want without changing any CSS styles because </p>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t        <div class=\"slide3\">\r\n");
      out.write("\t            <img src=\"resources/indexResources/dog.jpg\" alt=\"\" class=\"mainImage\">\r\n");
      out.write("\t            <div class=\"info\">\r\n");
      out.write("\t                <h2>Slide 03</h2>\r\n");
      out.write("\t                <p>In this video, You will learn how to design a Responsive Image Slider(Slideshow / Carousel) with Manual Navigation Buttons and Auto-Play Navigation functionalities only using pure javascript. In this Image Slider, you can add more images you want without changing any CSS styles because </p>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t        <div class=\"slide3\">\r\n");
      out.write("\t            <img src=\"resources/indexResources/dog.jpg\" alt=\"\" class=\"mainImage\">\r\n");
      out.write("\t            <div class=\"info\">\r\n");
      out.write("\t                <h2>Slide 04</h2>\r\n");
      out.write("\t                <p>In this video, You will learn how to design a Responsive Image Slider(Slideshow / Carousel) with Manual Navigation Buttons and Auto-Play Navigation functionalities only using pure javascript. In this Image Slider, you can add more images you want without changing any CSS styles because </p>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t        <div class=\"slide3\">\r\n");
      out.write("\t            <img src=\"resources/indexResources/dog.jpg\" alt=\"\" class=\"mainImage\">\r\n");
      out.write("\t            <div class=\"info\">\r\n");
      out.write("\t                <h2>Slide 05</h2>\r\n");
      out.write("\t                <p>In this video, You will learn how to design a Responsive Image Slider(Slideshow / Carousel) with Manual Navigation Buttons and Auto-Play Navigation functionalities only using pure javascript. In this Image Slider, you can add more images you want without changing any CSS styles because </p>\r\n");
      out.write("\t            </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t        <div class=\"navigation\">\r\n");
      out.write("\t            <div class=\"btn2 active\"></div>\r\n");
      out.write("\t            <div class=\"btn2\"></div>\r\n");
      out.write("\t            <div class=\"btn2\"></div>\r\n");
      out.write("\t            <div class=\"btn2\"></div>\r\n");
      out.write("\t            <div class=\"btn2\"></div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    var slides = document.querySelectorAll('.slide3');\r\n");
      out.write("    var btns = document.querySelectorAll('.btn2');\r\n");
      out.write("    let currentSlide = 1;\r\n");
      out.write("\r\n");
      out.write("    var manualNav = function(manual){\r\n");
      out.write("       slides.forEach((slide3) => {\r\n");
      out.write("           slide3.classList.remove('active');\r\n");
      out.write("           btns.forEach((btn) =>{\r\n");
      out.write("               btn.classList.remove('active');\r\n");
      out.write("           });\r\n");
      out.write("       });\r\n");
      out.write("\r\n");
      out.write("        slides[manual].classList.add('active');\r\n");
      out.write("        btns[manual].classList.add('active');\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    btns.forEach((btn,i)=>{\r\n");
      out.write("        btn.addEventListener(\"click\",()=>{\r\n");
      out.write("            manualNav(i);\r\n");
      out.write("            currentSlide = i;\r\n");
      out.write("        })\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 오토 네이비게이션\r\n");
      out.write("    var repeat = function(activeClass){\r\n");
      out.write("        let active = document.getElementsByClassName('active');\r\n");
      out.write("        let i = 1;\r\n");
      out.write("\r\n");
      out.write("        var repeater = () => {\r\n");
      out.write("            setTimeout(function(){\r\n");
      out.write("                [...active].forEach((activeSlide) => {\r\n");
      out.write("                    activeSlide.classList.remove('active');\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                slides[i].classList.add('active');          \r\n");
      out.write("                btns[i].classList.add('active');\r\n");
      out.write("\r\n");
      out.write("                i++;\r\n");
      out.write("\r\n");
      out.write("                if(slides.length== i){\r\n");
      out.write("                    i=0;\r\n");
      out.write("                }\r\n");
      out.write("                if (i >= slides.length) {\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("                repeater();\r\n");
      out.write("            },5000);\r\n");
      out.write("        }\r\n");
      out.write("        repeater();\r\n");
      out.write("    }\r\n");
      out.write("    repeat();\r\n");
      out.write("    </script>\t\r\n");
      out.write("\t<!-- slider 부분 종료 -->\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- our team 부분 -->\r\n");
      out.write("\t<section class=\"work\" id=\"work\">\r\n");
      out.write("      <div class=\"title reveal\">\r\n");
      out.write("        <h2 class=\"section-title\">DEVELOPERS</h2>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div class=\"content\">\r\n");
      out.write("        <div class=\"card reveal\">\r\n");
      out.write("          <div class=\"card-img\">\r\n");
      out.write("            <img src=\"images/work1.jpg\" alt=\"\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"card reveal\">\r\n");
      out.write("          <div class=\"card-img\">\r\n");
      out.write("            <img src=\"images/work2.jpg\" alt=\"\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"card reveal\">\r\n");
      out.write("          <div class=\"card-img\">\r\n");
      out.write("            <img src=\"images/work3.jpg\" alt=\"\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"card reveal\">\r\n");
      out.write("          <div class=\"card-img\">\r\n");
      out.write("            <img src=\"images/work4.jpg\" alt=\"\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"card reveal\">\r\n");
      out.write("          <div class=\"card-img\">\r\n");
      out.write("            <img src=\"images/work5.jpg\" alt=\"\">\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </section>\r\n");
      out.write("    <!-- 끝 -->\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 채팅시작 -->\r\n");
      out.write("\t<!-- <textarea readonly rows=\"10\" cols=\"35\" id=\"messageTextArea\"></textarea>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<input id=\"user\" type=\"text\" value=\"anonymous\"> <input\r\n");
      out.write("\t\t\tid=\"textMessage\" type=\"text\"><br> <input\r\n");
      out.write("\t\t\tonclick=\"sendMessage()\" value=\"Send\" type=\"button\"><br>\r\n");
      out.write("\t\t<input onclick=\"disconnect()\" value=\"Disconnect\" type=\"button\">\r\n");
      out.write("\t</div> -->\r\n");
      out.write("\t<!-- 채팅 종료 -->\r\n");
      out.write("\r\n");
      out.write("\t<!-- <script type=\"text/javascript\">\r\n");
      out.write("\t\t// 콘솔 텍스트 에리어 오브젝트\r\n");
      out.write("\t\tconst messageTextArea = document.getElementById(\"messageTextArea\");\r\n");
      out.write("\r\n");
      out.write("\t\t// 웹 소켓 접속 함수, url 뒤의 파라미터는 callback 함수를 받는다.\r\n");
      out.write("\t\tfunction connectWebSocket(url, message, open, close, error) {\r\n");
      out.write("\r\n");
      out.write("\t\t\tlet webSocket = new WebSocket(url);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 함수 체크하는 함수\r\n");
      out.write("\t\t\tfunction call(cb, msg) {\r\n");
      out.write("\t\t\t\t// cb가 함수 타입인지 확인\r\n");
      out.write("\t\t\t\tif (cb !== undefined && typeof cb === \"function\") {\r\n");
      out.write("\t\t\t\t\t// 함수 호출\r\n");
      out.write("\t\t\t\t\tcb.call(null, msg);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t// WebSocket 서버와 접속이 되면 호출되는 함수\r\n");
      out.write("\t\t\twebSocket.onopen = function() {\r\n");
      out.write("\t\t\t\tcall(open);\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t// WebSocket 서버와 접속이 끊기면 호출되는 함수\r\n");
      out.write("\t\t\twebSocket.onclose = function() {\r\n");
      out.write("\t\t\t\tcall(close);\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t// WebSocket 서버와 통신 중에 에러가 발생하면 요청되는 함수\r\n");
      out.write("\t\t\twebSocket.onerror = function() {\r\n");
      out.write("\t\t\t\tcall(error);\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t\t// WebSocket 서버로 부터 메시지가 오면 호출되는 함수\r\n");
      out.write("\t\t\twebSocket.onmessage = function(msg) {\r\n");
      out.write("\t\t\t\tcall(message, msg);\r\n");
      out.write("\t\t\t};\r\n");
      out.write("\t\t\treturn webSocket;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 연결 발생 때 사용할 callback 함수\r\n");
      out.write("\t\tvar open = function() {\r\n");
      out.write("\t\t\t// 콘솔 텍스트에 메시지를 출력한다\r\n");
      out.write("\t\t\tmessageTextArea.value += \"Server connect...\\n\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 종료 발생 때 사용할 callback 함수\r\n");
      out.write("\t\tvar close = function() {\r\n");
      out.write("\t\t\t// 콘솔 텍스트에 메시지를 출력한다\r\n");
      out.write("\t\t\tmessageTextArea.value += \"Server Disconnect...\\n\";\r\n");
      out.write("\t\t\t// 재 접속을 시도한다.\r\n");
      out.write("\t\t\tsetTimeout(function() {\r\n");
      out.write("\t\t\t\t// 재접속\r\n");
      out.write("\t\t\t\twebSocket = connectWebSocket(\r\n");
      out.write("\t\t\t\t\t\t\"ws://localhost:8787/Semi/semiIndexChat\", message,\r\n");
      out.write("\t\t\t\t\t\topen, close, error);\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 에러 발생 때 사용할 callback 함수\r\n");
      out.write("\t\tvar error = function() {\r\n");
      out.write("\t\t\tmessageTextArea.value += \"error...\\n\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t// 메세지를 받을 때 사용할 callback 함수\r\n");
      out.write("\t\tvar message = function(msg) {\r\n");
      out.write("\t\t\tmessageTextArea.value += msg.data + \"\\n\";\r\n");
      out.write("\t\t};\r\n");
      out.write("\r\n");
      out.write("\t\t// 웹 소켓 생성\r\n");
      out.write("\t\tvar webSocket = connectWebSocket(\r\n");
      out.write("\t\t\t\t\"ws://localhost:8787/Semi/semiIndexChat\", message, open, close,\r\n");
      out.write("\t\t\t\terror);\r\n");
      out.write("\r\n");
      out.write("\t\t// Send 버튼을 누르면 호출되는 함수\r\n");
      out.write("\t\tfunction sendMessage() {\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 유저명 텍스트 박스 오브젝트를 취득\r\n");
      out.write("\t\t\tvar user = document.getElementById(\"user\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 송신 메시지를 작성하는 텍스트 박스 오브젝트를 취득\r\n");
      out.write("\t\t\tvar message = document.getElementById(\"textMessage\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 콘솔 텍스트에 메시지를 출력한다.\r\n");
      out.write("\t\t\tmessageTextArea.value += user.value + \"(me) => \" + message.value\r\n");
      out.write("\t\t\t\t\t+ \"\\n\";\r\n");
      out.write("\r\n");
      out.write("\t\t\t// WebSocket 서버에 메시지를 전송(형식 「{{유저명}}메시지」)\r\n");
      out.write("\t\t\twebSocket.send(\"{{\" + user.value + \"}}\" + message.value);\r\n");
      out.write("\r\n");
      out.write("\t\t\t// 송신 메시지를 작성한 텍스트 박스를 초기화한다.\r\n");
      out.write("\t\t\tmessage.value = \"\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// Disconnect 버튼을 누르면 호출되는 함수\r\n");
      out.write("\t\tfunction disconnect() {\r\n");
      out.write("\t\t\t// WebSocket 접속 해제\r\n");
      out.write("\t\t\twebSocket.close();\r\n");
      out.write("\t\t} -->\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
