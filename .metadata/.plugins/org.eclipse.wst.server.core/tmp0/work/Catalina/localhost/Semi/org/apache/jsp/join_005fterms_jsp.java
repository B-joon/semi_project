/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-04-06 05:51:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_005fterms_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write('\r');
      out.write('\n');
 response.setContentType("text/html; charset=UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    function idCheckProc() {\r\n");
      out.write("        var chk = document.getElementsByName (\"mem_id\")[0].title;\r\n");
      out.write("        if(chk == 'n'){\r\n");
      out.write("            alert(\"id 중복체크를 해주세요!\");\r\n");
      out.write("            document.getElementsByName(\"mem_id\")[0].focus();\r\n");
      out.write("        }\r\n");
      out.write("       \r\n");
      out.write("   }\r\n");
      out.write("    \r\n");
      out.write("         function idCheck(){\r\n");
      out.write("             var mem_id = document.getElementsByName(\"mem_id\")[0].value; \r\n");
      out.write("             var popupX = (window.screen.width/2)-(200/2);\r\n");
      out.write("             var popupY = (window.screen.height/2)-(300/2);\r\n");
      out.write("             \r\n");
      out.write("             if(mem_id==null|| mem_id.trim() == \"\"){\r\n");
      out.write("                 alert(\"id를 입력해 주세요 !\");\r\n");
      out.write("                 \r\n");
      out.write("             }else {\r\n");
      out.write("            \t location.href=\"login.do?command=idchk&mem_id=\"+mem_id;\r\n");
      out.write("                 open(\"login.do?command=idchk&mem_id=\"+mem_id,\"\",\"statusbar=no,width=300, height=200, left=\"+popupX+\",top=\"+popupY);\r\n");
      out.write("                 \r\n");
      out.write("             }\r\n");
      out.write("             \r\n");
      out.write("         }\r\n");
      out.write("    \r\n");
      out.write("   </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("    <h2>회원가입</h2>\r\n");
      out.write("\r\n");
      out.write("    <form action=\"login.do\" method=\"post\">\r\n");
      out.write("        <input type=\"hidden\" name=\"command\" value=\"insertuser\">\r\n");
      out.write("\r\n");
      out.write("        <table>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>아이디</th>\r\n");
      out.write("                <td>\r\n");
      out.write("                    <input type=\"text\" name=\"mem_id\" required=\"required\" title=\"n\">\r\n");
      out.write("                    <input type=\"button\" value=\"중복체크\" onclick=\"idCheck();\">\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>비밀번호</th>\r\n");
      out.write("                <td><input type=\"password\" name=\"mem_pw\" required=\"required\" onclick=\"idCheckProc();\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>이름</th>\r\n");
      out.write("                <td><input type=\"text\" name=\"mem_name\" required=\"required\" onclick=\"idCheckProc()\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>닉네임</th>\r\n");
      out.write("                <td><input type=\"text\" name=\"mem_nickname\" required=\"required\" onclick=\"idCheckProc()\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>전화번호</th>\r\n");
      out.write("                <td><input type=\"text\" name=\"mem_phone\" required=\"required\" onclick=\"idCheckProc()\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>주소</th>\r\n");
      out.write("                \r\n");
      out.write("                <td >\r\n");
      out.write("                 <div class=\"d-flex justify-content-end\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-info\" onClick=\"goPopup();\">주소검색</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<input type=\"text\" size=100 name=\"mem_addr\" id=\"address\" class=\"form-control\" placeholder=\"도로명 주소를 입력해 주세요\" required readonly />\r\n");
      out.write("                \r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            \r\n");
      out.write("            <tr>\r\n");
      out.write("                <th>이메일</th>\r\n");
      out.write("                <td><input type=\"text\" name=\"mem_email\" required=\"required\" onclick=\"idCheckProc()\"></td>\r\n");
      out.write("            </tr>\r\n");
      out.write("            <tr>\r\n");
      out.write("                <td colspan=\"2\" align=\"right\">\r\n");
      out.write("                    <input type=\"submit\" value=\"가입\">\r\n");
      out.write("                    <input type=\"button\" value=\"취소\">\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </table>\r\n");
      out.write("    </form>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("function goPopup() {\r\n");
      out.write("\t// 주소검색을 수행할 팝업 페이지를 호출합니다.\r\n");
      out.write("\t// 호출된 페이지(jusopopup.jsp)에서 실제 주소검색URL(https://www.juso.go.kr/addrlink/addrLinkUrl.do)를 호출하게 됩니다.\r\n");
      out.write("\tvar pop = window.open(\"jusoPopup.jsp\", \"pop\",\r\n");
      out.write("\t\t\t\"width=570,height=420, scrollbars=yes, resizable=yes\");\r\n");
      out.write("}\r\n");
      out.write("function jusoCallBack(roadFullAddr) {\r\n");
      out.write("\tvar addressEl = document.querySelector(\"#address\");\r\n");
      out.write("\taddressEl.value = roadFullAddr;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
