/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-04-04 16:28:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.dto.BoardDto;
import com.biz.BoardBiz;
import com.dao.BoardDao;
import com.dto.SemiDto;
import com.dao.SemiDao;
import com.dto.LoginDto;

public final class noticeboard_005fselect_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1614137368486L));
    _jspx_dependants.put("/Form/header.jsp", Long.valueOf(1617545595814L));
    _jspx_dependants.put("jar:file:/C:/Users/kas78/Desktop/khkhkh/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Semi/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.dao.BoardDao");
    _jspx_imports_classes.add("com.dto.LoginDto");
    _jspx_imports_classes.add("com.biz.BoardBiz");
    _jspx_imports_classes.add("com.dto.SemiDto");
    _jspx_imports_classes.add("com.dto.BoardDto");
    _jspx_imports_classes.add("com.dao.SemiDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<!-- 부트스트랩 -->\r\n");
      out.write("    <!-- CSS only -->\r\n");
      out.write("    <link\r\n");
      out.write("      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css\"\r\n");
      out.write("      rel=\"stylesheet\"\r\n");
      out.write("      integrity=\"sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl\"\r\n");
      out.write("      crossorigin=\"anonymous\"\r\n");
      out.write("    />\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.0/font/bootstrap-icons.css\">\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"resources/css/header.css\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>selectOne</title>\r\n");
      out.write("<style>\r\n");
      out.write("  .btn{\r\n");
      out.write("  background-color: #ff9999!important;}\r\n");
      out.write("  .btn:hover, .btn:focus{\r\n");
      out.write("  background-color: hotpink!important;}\r\n");
      out.write(".btn:focus, .btn:active, .btn:hover, input:active, input:focus{\r\n");
      out.write("    box-shadow: none!important;\r\n");
      out.write("    outline: none!important;\r\n");
      out.write("}\r\n");
      out.write("  </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body> \r\n");
      out.write("<!-- 헤더부분 추가 -->\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write(" \r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"resources/css/header.css\">\r\n");
      out.write("\t<script type=\"text/javascript\" src=\"resources/js/header.js\"></script>\r\n");
      out.write("\t<link\r\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css\"\r\n");
      out.write("\trel=\"stylesheet\"\r\n");
      out.write("\tintegrity=\"sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl\"\r\n");
      out.write("\tcrossorigin=\"anonymous\" />\r\n");
      out.write("\t<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.0/font/bootstrap-icons.css\">\r\n");
      out.write("\t<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css\">\r\n");
      out.write("\t\r\n");
      out.write("\t<!--  <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\" src=\"resouces/bootstrap/js/bootstrap.js\"></script>-->\r\n");
      out.write("</head>\r\n");
      out.write("  <body>\r\n");
      out.write("  ");

  	LoginDto dto1 = (LoginDto)session.getAttribute("dto");
  
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("      <header>\r\n");
      out.write("\t      <!-- 로고 부분 -->\r\n");
      out.write("\t      <a href=\"move.do?move=home\" class=\"brand\">\r\n");
      out.write("\t      \t<img src=\"resources/img/logo.png\" alt=\"\" width=\"200px\">\r\n");
      out.write("\t      </a>\r\n");
      out.write("\t      <!-- ? -->\r\n");
      out.write("\t      <div class=\"menu-btn\"></div>\r\n");
      out.write("\t      \r\n");
      out.write("\t      <!-- 항복 부분 -->\r\n");
      out.write("\t      <div class=\"navigation\">\r\n");
      out.write("\t      \t<a href=\"move.do?move=petboard\">펫보드</a>\r\n");
      out.write("\t        <a href=\"move.do?move=noticeboard\">공지사항</a>\r\n");
      out.write("\t        <a href=\"move.do?move=matchPet\">얼굴인식</a>\r\n");
      out.write("\t        <a href=\"move.do?move=donation\">기부페이지</a>\r\n");
      out.write("\t        <a href=\"move.do?move=map\">지도페이지이동</a>\r\n");
      out.write("\t        <a href=\"move.do?move=doctor\">펫닥터페이지</a>\r\n");
      out.write("\t        ");

			if( dto1 != null ){
				if(dto1.getMem_image() == null){			    	
			
      out.write("\r\n");
      out.write("\t\t\t<div style=\"display : inline;\">\r\n");
      out.write("\t\t\t\t<a href=\"mypage.jsp\">\r\n");
      out.write("\t        \t\t<img src=\"resources/img/profile.jpg\"  width=\"32px\" height=\"32px;\" style=\"border-radius: 50%; overflow: hidden;\" >\r\n");
      out.write("\t        \t</a>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t        \t\t\t\t\t    \t\t\r\n");
      out.write("\t\t\t");

			    }else{
			
      out.write("\r\n");
      out.write("\t       \t<a href=\"mypage.jsp\">\r\n");
      out.write("\t            <img src=\"./upload/");
      out.print(dto1.getMem_image() );
      out.write("\"  width=\"32px\" height=\"32px;\" style=\"border-radius: 50%; overflow: hidden;\">\r\n");
      out.write("\t        </a>\r\n");
      out.write("\t\t\t");

				}			
			
      out.write("\r\n");
      out.write("\t\t   \t<a href=\"login.do?command=logout\">\r\n");
      out.write("\t\t   \t\t<button>로그아웃</button>\r\n");
      out.write("\t\t   \t</a>\r\n");
      out.write("\t       \t");

	       	} else {
	      	
      out.write("\r\n");
      out.write("\t       \t<a href=\"move.do?move=loginpage\">\r\n");
      out.write("\t       \t\t<button>로그인</button> \r\n");
      out.write("\t       \t</a>\r\n");
      out.write("\t       \t");

	       	}
	       	
      out.write("\r\n");
      out.write("\t       \t</div> \r\n");
      out.write("    </header>\r\n");
      out.write("    <div class=\"upsite\"></div>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<!-- 바디부분 시작 -->\r\n");
      out.write("    <div class=\"mt-4\">\r\n");
      out.write("      <div class=\"container d-flex justify-content-center\"><!-- 가로 폭 조절 -->\r\n");
      out.write("        <div class=\"col-99\">\r\n");
      out.write("        <div class=\"card\"><!-- 카드 시작 -->\r\n");
      out.write("        <div class=\"noticeboard_list\">\t\r\n");

	LoginDto logindto = (LoginDto) session.getAttribute("dto"); //컨트롤러에서 dto 받아와서 형변환 

	int article_no = Integer.parseInt(request.getParameter("article_no"));

	BoardBiz biz = new BoardBiz();
	BoardDto dto = biz.selectOne(article_no);
	

      out.write("\r\n");
      out.write("\t<table class=\"table\" id=\"select\">\r\n");
      out.write("\t<col width=\"90px\" />\r\n");
      out.write("    \t<col width=\"700px\"/>\r\n");
      out.write("    \t<col width=\"120px\"/>\r\n");
      out.write("    \t<col width=\"120px\"/>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th style=\"text-align: center\">작성자</th>\r\n");
      out.write("\t\t<td>");
      out.print(dto.getMem_name() );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th style=\"text-align: center\">제목</th>\r\n");
      out.write("\t\t<td>");
      out.print(dto.getTitle() );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th style=\"text-align: center; height:350px;\">내용</th>\r\n");
      out.write("\t\t<td><div>");
      out.print(dto.getContent() );
      out.write("</div></td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<div style=\"text-align: right; margin-right: 10px; margin-bottom: 10px;\">\r\n");
      out.write("\t<input type=\"button\" class=\"btn\" value=\"목록으로\" onclick=\"location.href='notice.do?command=list'\" >\r\n");
      out.write("\t<input type=\"button\" class=\"btn\" value=\"수정\" onclick=\"location.href='notice.do?command=updateform&article_no=");
      out.print(article_no );
      out.write("'\"/>\r\n");
      out.write("\t<input type=\"button\" class=\"btn\" value=\"삭제\" onclick=\"location.href='notice.do?command=delete&article_no=");
      out.print(article_no );
      out.write("'\"/>\r\n");
      out.write("\t </div>\r\n");
      out.write("\t </div>\r\n");
      out.write("    </div><!-- 카드 끝 -->\r\n");
      out.write("    \t\t</div>\r\n");
      out.write("    \t</div>\r\n");
      out.write("    </div>\r\n");
      out.write("\t<br/>\r\n");
      out.write("\t<br/>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
